{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Downloads\\\\fact-stream\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport supabase from './supabase';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [facts, setFacts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentCategory, setCurrentCategory] = useState('all');\n  useEffect(function () {\n    async function getFacts() {\n      setIsLoading(true);\n      let query = supabase.from('facts').select('*');\n      if (currentCategory !== 'all') query = query.eq('category', currentCategory);\n      const {\n        data: facts,\n        error\n      } = await query.order('votesInteresting', {\n        ascending: false\n      }).limit(1000);\n      if (!error) setFacts(facts);else alert('There was a problem getting data');\n      setIsLoading(false);\n    }\n    getFacts();\n  }, [currentCategory]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showForm: showForm,\n      setShowForm: setShowForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), showForm ? /*#__PURE__*/_jsxDEV(NewFactForm, {\n      setFacts: setFacts,\n      setShowForm: setShowForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(CategoryFilter, {\n        setCurrentCategory: setCurrentCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FactList, {\n        facts: facts,\n        setFacts: setFacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"31zxd/+Dafiijl6cEVyIbLIoyAM=\");\n_c = App;\nfunction Loader() {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"message\",\n    children: \"Loading... Please Wait...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Loader;\nfunction Header(_ref) {\n  let {\n    showForm,\n    setShowForm\n  } = _ref;\n  const appTitle = 'Fact Stream';\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"logo.png\",\n        height: \"69\",\n        width: \"69\",\n        alt: \"Fact Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: appTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-large btn-open\",\n      onClick: () => setShowForm(show => !show),\n      children: showForm ? 'Close' : 'Share a fact'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Header;\nconst CATEGORIES = [{\n  name: 'technology',\n  color: '#3b82f6'\n}, {\n  name: 'science',\n  color: '#16a34a'\n}, {\n  name: 'finance',\n  color: '#ef4444'\n}, {\n  name: 'society',\n  color: '#eab308'\n}, {\n  name: 'entertainment',\n  color: '#db2777'\n}, {\n  name: 'health',\n  color: '#14b8a6'\n}, {\n  name: 'history',\n  color: '#f97316'\n}, {\n  name: 'news',\n  color: '#8b5cf6'\n}];\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === 'http:' || url.protocol === 'https:';\n}\nfunction NewFactForm(_ref2) {\n  _s2();\n  let {\n    setFacts,\n    setShowForm\n  } = _ref2;\n  const [text, setText] = useState('');\n  const [source, setSource] = useState('');\n  const [category, setCategory] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const textLength = text.length;\n  async function handleSubmit(e) {\n    // this is done to prevent browser reload\n    e.preventDefault();\n    console.log(text, source, category);\n\n    // check data validity and create a fact\n    if (text && isValidHttpUrl(source) && category && textLength <= 200) {\n      // upload the fact to supabase and get the fact object back\n      setIsUploading(true);\n      const {\n        data: newFact,\n        error\n      } = await supabase.from('facts').insert([{\n        text,\n        source,\n        category\n      }]).select();\n      setIsUploading(false);\n\n      // add the new fact to the user inteface\n      if (!error) setFacts(facts => [newFact[0], ...facts]);\n      setText('');\n      setSource('');\n      setCategory('');\n      setShowForm(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"fact-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Share a fact...\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      disabled: isUploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: 200 - textLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: source,\n      type: \"text\",\n      placeholder: \"source...\",\n      onChange: e => setSource(e.target.value),\n      disabled: isUploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      disabled: isUploading,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose a category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat.name,\n        children: cat.name.toUpperCase()\n      }, cat.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-large\",\n      disabled: isUploading,\n      children: \"Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s2(NewFactForm, \"06Oj5Qkfz0xLbX9j6dee9SZf4hE=\");\n_c4 = NewFactForm;\nfunction CategoryFilter(_ref3) {\n  let {\n    setCurrentCategory\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"category\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-all-categories\",\n          onClick: () => setCurrentCategory('all'),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"category\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-category\",\n          style: {\n            backgroundColor: cat.color\n          },\n          onClick: () => setCurrentCategory(cat.name),\n          children: cat.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, cat.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_c5 = CategoryFilter;\nfunction FactList(_ref4) {\n  let {\n    facts,\n    setFacts\n  } = _ref4;\n  if (facts.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"message\",\n    children: \"No facts for this category yet! Create the first one \\u270C\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"facts-list\",\n      children: facts.map(fact => /*#__PURE__*/_jsxDEV(Fact, {\n        fact: fact,\n        setFacts: setFacts\n      }, fact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"There are \", facts.length, \" facts in the database. Add your own!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_c6 = FactList;\nfunction Fact(_ref5) {\n  _s3();\n  let {\n    fact,\n    setFacts\n  } = _ref5;\n  const [isUpdating, setIsUpdating] = useState(false);\n  const isDisputed = fact.votesInteresting + fact.votesMindblowing < fact.votesFalse;\n  async function handleVote(columnName) {\n    setIsUpdating(true);\n    const {\n      data: updatedFact,\n      error\n    } = await supabase.from('facts').update({\n      [columnName]: fact[columnName] + 1\n    }).eq('id', fact.id).select();\n    setIsUpdating(false);\n    if (!error) setFacts(facts => facts.map(f => f.id === fact.id ? updatedFact[0] : f));\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"fact\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [isDisputed ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"disputed\",\n        children: \"[\\u26D4\\uFE0F DISPUTED]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }, this) : null, fact.text, /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"source\",\n        href: fact.source,\n        target: \"_blank\",\n        children: \"(Source)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tag\",\n      style: {\n        backgroundColor: CATEGORIES.find(cat => cat.name === fact.category).color\n      },\n      children: fact.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vote-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleVote('votesInteresting'),\n        disabled: isUpdating,\n        children: [\"\\uD83D\\uDC4D \", fact.votesInteresting]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleVote('votesMindblowing'),\n        disabled: isUpdating,\n        children: [\"\\uD83E\\uDD2F \", fact.votesMindblowing]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleVote('votesFalse'),\n        disabled: isUpdating,\n        children: [\"\\u26D4\\uFE0F \", fact.votesFalse]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n_s3(Fact, \"Iu9QP35HOe9AU5k2QizHmZa0ji4=\");\n_c7 = Fact;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Loader\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"NewFactForm\");\n$RefreshReg$(_c5, \"CategoryFilter\");\n$RefreshReg$(_c6, \"FactList\");\n$RefreshReg$(_c7, \"Fact\");","map":{"version":3,"names":["useEffect","useState","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showForm","setShowForm","facts","setFacts","isLoading","setIsLoading","currentCategory","setCurrentCategory","getFacts","query","from","select","eq","data","error","order","ascending","limit","alert","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","NewFactForm","className","CategoryFilter","Loader","FactList","_c","_c2","_ref","appTitle","src","height","width","alt","onClick","show","_c3","CATEGORIES","name","color","isValidHttpUrl","string","url","URL","_","protocol","_ref2","_s2","text","setText","source","setSource","category","setCategory","isUploading","setIsUploading","textLength","length","handleSubmit","e","preventDefault","console","log","newFact","insert","onSubmit","type","placeholder","value","onChange","target","disabled","map","cat","toUpperCase","_c4","_ref3","style","backgroundColor","_c5","_ref4","fact","Fact","id","_c6","_ref5","_s3","isUpdating","setIsUpdating","isDisputed","votesInteresting","votesMindblowing","votesFalse","handleVote","columnName","updatedFact","update","f","href","find","_c7","$RefreshReg$"],"sources":["C:/Users/shiva/Downloads/fact-stream/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport supabase from './supabase';\nimport './style.css';\n\n\nfunction App() {\n  const [showForm, setShowForm] = useState(false);\n  const [facts, setFacts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentCategory, setCurrentCategory] = useState('all');\n\n  useEffect(\n    function () {\n      async function getFacts() {\n        setIsLoading(true);\n\n        let query = supabase.from('facts').select('*');\n\n        if (currentCategory !== 'all')\n          query = query.eq('category', currentCategory);\n\n        const { data: facts, error } = await query\n          .order('votesInteresting', { ascending: false })\n          .limit(1000);\n\n        if (!error) setFacts(facts);\n        else alert('There was a problem getting data');\n        setIsLoading(false);\n      }\n      getFacts();\n    },\n    [currentCategory]\n  );\n\n  return (\n    <>\n      <Header showForm={showForm} setShowForm={setShowForm} />\n      {showForm ? (\n        <NewFactForm setFacts={setFacts} setShowForm={setShowForm} />\n      ) : null}\n\n      <main className='main'>\n        <CategoryFilter setCurrentCategory={setCurrentCategory} />\n\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <FactList facts={facts} setFacts={setFacts} />\n        )}\n      </main>\n    </>\n  );\n}\n\nfunction Loader() {\n  return <p className='message'>Loading... Please Wait...</p>;\n}\n\nfunction Header({ showForm, setShowForm }) {\n  const appTitle = 'Fact Stream';\n\n  return (\n    <header className='header'>\n      <div className='logo'>\n        <img src='logo.png' height='69' width='69' alt='Fact Stream' />\n        <h1>{appTitle}</h1>\n      </div>\n\n      <button\n        className='btn btn-large btn-open'\n        onClick={() => setShowForm((show) => !show)}\n      >\n        {showForm ? 'Close' : 'Share a fact'}\n      </button>\n    </header>\n  );\n}\n\nconst CATEGORIES = [\n  { name: 'technology', color: '#3b82f6' },\n  { name: 'science', color: '#16a34a' },\n  { name: 'finance', color: '#ef4444' },\n  { name: 'society', color: '#eab308' },\n  { name: 'entertainment', color: '#db2777' },\n  { name: 'health', color: '#14b8a6' },\n  { name: 'history', color: '#f97316' },\n  { name: 'news', color: '#8b5cf6' },\n];\n\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === 'http:' || url.protocol === 'https:';\n}\n\nfunction NewFactForm({ setFacts, setShowForm }) {\n  const [text, setText] = useState('');\n  const [source, setSource] = useState('');\n  const [category, setCategory] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const textLength = text.length;\n\n  async function handleSubmit(e) {\n    // this is done to prevent browser reload\n    e.preventDefault();\n    console.log(text, source, category);\n\n    // check data validity and create a fact\n    if (text && isValidHttpUrl(source) && category && textLength <= 200) {\n\n      // upload the fact to supabase and get the fact object back\n      setIsUploading(true);\n      const { data: newFact, error } = await supabase\n        .from('facts')\n        .insert([{ text, source, category }])\n        .select();\n      setIsUploading(false);\n\n      // add the new fact to the user inteface\n      if (!error) setFacts((facts) => [newFact[0], ...facts]);\n\n      setText('');\n      setSource('');\n      setCategory('');\n\n\n      setShowForm(false);\n    }\n  }\n\n  return (\n    <form className='fact-form' onSubmit={handleSubmit}>\n      <input\n        type='text'\n        placeholder='Share a fact...'\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        disabled={isUploading}\n      />\n      <span>{200 - textLength}</span>\n      <input\n        value={source}\n        type='text'\n        placeholder='source...'\n        onChange={(e) => setSource(e.target.value)}\n        disabled={isUploading}\n      />\n      <select\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n        disabled={isUploading}\n      >\n        <option value=''>Choose a category:</option>\n        {CATEGORIES.map((cat) => (\n          <option key={cat.name} value={cat.name}>\n            {cat.name.toUpperCase()}\n          </option>\n        ))}\n      </select>\n      <button className='btn btn-large' disabled={isUploading}>\n        Share\n      </button>\n    </form>\n  );\n}\n\nfunction CategoryFilter({ setCurrentCategory }) {\n  return (\n    <aside>\n      <ul>\n        <li className='category'>\n          <button\n            className='btn btn-all-categories'\n            onClick={() => setCurrentCategory('all')}\n          >\n            All\n          </button>\n        </li>\n\n        {CATEGORIES.map((cat) => (\n          <li key={cat.name} className='category'>\n            <button\n              className='btn btn-category'\n              style={{ backgroundColor: cat.color }}\n              onClick={() => setCurrentCategory(cat.name)}\n            >\n              {cat.name}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </aside>\n  );\n}\n\nfunction FactList({ facts, setFacts }) {\n  if (facts.length === 0)\n    return (\n      <p className='message'>\n        No facts for this category yet! Create the first one ✌️\n      </p>\n    );\n\n  return (\n    <section>\n      <ul className='facts-list'>\n        {facts.map((fact) => (\n          <Fact key={fact.id} fact={fact} setFacts={setFacts} />\n        ))}\n      </ul>\n      <p>There are {facts.length} facts in the database. Add your own!</p>\n    </section>\n  );\n}\n\nfunction Fact({ fact, setFacts }) {\n  const [isUpdating, setIsUpdating] = useState(false);\n  const isDisputed =\n    fact.votesInteresting + fact.votesMindblowing < fact.votesFalse;\n\n  async function handleVote(columnName) {\n    setIsUpdating(true);\n    const { data: updatedFact, error } = await supabase\n      .from('facts')\n      .update({ [columnName]: fact[columnName] + 1 })\n      .eq('id', fact.id)\n      .select();\n    setIsUpdating(false);\n\n    if (!error)\n      setFacts((facts) =>\n        facts.map((f) => (f.id === fact.id ? updatedFact[0] : f))\n      );\n  }\n\n  return (\n    <li className='fact'>\n      <p>\n        {isDisputed ? <span className='disputed'>[⛔️ DISPUTED]</span> : null}\n        {fact.text}\n        <a className='source' href={fact.source} target='_blank'>\n          (Source)\n        </a>\n      </p>\n      <span\n        className='tag'\n        style={{\n          backgroundColor: CATEGORIES.find((cat) => cat.name === fact.category)\n            .color,\n        }}\n      >\n        {fact.category}\n      </span>\n      <div className='vote-buttons'>\n        <button\n          onClick={() => handleVote('votesInteresting')}\n          disabled={isUpdating}\n        >\n          👍 {fact.votesInteresting}\n        </button>\n        <button\n          onClick={() => handleVote('votesMindblowing')}\n          disabled={isUpdating}\n        >\n          🤯 {fact.votesMindblowing}\n        </button>\n        <button onClick={() => handleVote('votesFalse')} disabled={isUpdating}>\n          ⛔️ {fact.votesFalse}\n        </button>\n      </div>\n    </li>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}